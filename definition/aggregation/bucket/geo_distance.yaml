url: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-geodistance-aggregation.html
doc: |
    A multi-bucket aggregation that works on geo_point fields and conceptually works very similar to the [range](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-range-aggregation.html) aggregation. The user can define a point of origin and a set of distance range buckets. The aggregation evaluate the distance of each document value from the origin point and determines the buckets it belongs to based on the ranges (a document belongs to a bucket if the distance between the document and the origin falls within the distance range of the bucket).
parameters:
    field:
        type: str
        required: True
        doc: |
            The specified field must be of type geo_point (which can only be set explicitly in the mappings). And it can also hold an array of geo_point fields, in which case all will be taken into account during aggregation.
    ranges:
        type: Sequence[Mapping[str, float]]
        required: True
        doc: |
            A list of ranges that define the separate buckets, e.g:
                [
                    { "to": 100000 },
                    { "from": 100000, "to": 300000 },
                    { "from": 300000 }
                ]
    origin:
        type: Union[str, Mapping[str, float], Sequence[float]]
        required: True
        doc: |
            The origin point can accept all formats supported by the [geo_point type](https://www.elastic.co/guide/en/elasticsearch/reference/current/geo-point.html):
                - Object format: { "lat" : 52.3760, "lon" : 4.894 } - this is the safest format as it is the most explicit about the lat & lon values
                - String format: "52.3760, 4.894" - where the first number is the lat and the second is the lon
                - Array format: [4.894, 52.3760] - which is based on the GeoJson standard and where the first number is the lon and the second one is the lat
    unit:
        type: str
        default: m
        doc: |
            By default, the distance unit is m (meters) but it can also accept: mi (miles), in (inches), yd (yards), km (kilometers), cm (centimeters), mm (millimeters).
    distance_type:
        type: str
        default: arc
        doc: |
            There are two distance calculation modes: arc (the default), and plane. The arc calculation is the most accurate. The plane is the fastest but least accurate. Consider using plane when your search context is "narrow", and spans smaller geographical areas (~5km). plane will return higher error margins for searches across very large areas (e.g. cross continent search)
    keyed:
        type: bool
        default: False
        doc: |
            Setting the keyed flag to true will associate a unique string key with each bucket and return the ranges as a hash rather than an array.