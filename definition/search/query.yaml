url: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-search.html
parameters:
    allow_no_indices:
        type: bool
        default: True
        doc: |
            If false, the request returns an error if any wildcard expression,
            [index alias](https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-aliases.html),
            or _all value targets only missing or closed indices. This behavior applies even
            if the request targets other open indices. For example, a request targeting
            `foo*,bar*` returns an error if an index starts with `foo` but no index starts with `bar`.
    allow_partial_search_results:
        type: bool
        default: True
        doc: |
            If `true`, returns partial results if there are request timeouts or
            [shard failures](https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-replication.html#shard-failures).
            If `false`, returns an error with no partial results. Defaults to `true`.

            To override the default for this field, set the `search.default_allow_partial_results`
            cluster setting to false.
    batched_reduce_size:
        type: int
        default: 512
        doc: |
            The number of shard results that should be reduced at once on the coordinating node.
            This value should be used as a protection mechanism to reduce the memory overhead per
            search request if the potential number of shards in the request can be large. Defaults to `512`.
    ccs_minimize_roundtrips:
        type: bool
        default: true
        doc: |
            If `true`, network round-trips between the coordinating node and the remote clusters are
            minimized when executing cross-cluster search (CCS) requests.
            See [How cross-cluster search handles network delays](https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-cross-cluster-search.html#ccs-network-delays).
            Defaults to `true`.
    docvalue_fields:
        type: str
        doc: |
            A comma-separated list of fields to return as the docvalue representation of a field for each hit.
    expand_wildcards:
        type: str
        default: open
        doc: |
            Controls what kind of indices that wildcard expressions can expand to.
            Multiple values are accepted when separated by a comma, as in `open,hidden`. Valid values are:

                - `all` Expand to open and closed indices, including hidden indices.
                - `open` Expand only to open indices.
                - `closed` Expand only to closed indices.
                - `hidden` Expansion of wildcards will include hidden indices. Must be combined with open, closed, or both.
                - `none` Wildcard expressions are not accepted.

            Defaults to `open`
    explain:
        type: bool
        default: False
        doc: |
            If `true`, returns detailed information about score computation as part of a hit. Defaults to `false`.
    from:
        type: int
        default: 0
        doc: |
            Starting document offset. Defaults to `0`.

            Note: By default, you cannot page through more than 10,000 hits using the from and
            size parameters. To page through more hits, use the
            [search_after](https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html#search-after)
            parameter.
    ignore_throttled:
        type: bool
        default: True
        doc: |
            If `true`, concrete, expanded or aliased indices will be ignored when frozen. Defaults to `true`.
    ignore_unavailable:
        type: bool
        default: False
        doc: |
            If `true`, missing or closed indices are not included in the response. Defaults to `false`.
    max_concurrent_shard_requests:
        type: int
        default: 5
        doc: |
            Defines the number of concurrent shard requests per node this search executes concurrently.
            This value should be used to limit the impact of the search on the cluster in order to limit
            the number of concurrent shard requests. Defaults to `5`.
    pre_filter_shard_size:
        type: int
        doc: |
            Defines a threshold that enforces a pre-filter roundtrip to prefilter search shards based
            on query rewriting if the number of shards the search request expands to exceeds the threshold.
            This filter roundtrip can limit the number of shards significantly if for instance a
            shard can not match any documents based on its rewrite method ie. if date filters are
            mandatory to match but the shard bounds and the query are disjoint. When unspecified,
            the pre-filter phase is executed if any of these conditions is met:

                - The request targets more than 128 shards.
                - The request targets one or more read-only index.
                - The primary sort of the query targets an indexed field.
    preference:
        type: str
        doc: |
            Nodes and shards used for the search. By default, Elasticsearch selects from eligible nodes
            and shards using
            [adaptive replica selection](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-shard-routing.html#search-adaptive-replica),
            accounting for [allocation awareness](https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-cluster.html#shard-allocation-awareness).

            Valid values:

                - `_only_local`
                Run the search only on shards on the local node.
                - `_local`
                If possible, run the search on shards on the local node. If not, select shards using the default method.
                - `_only_nodes:<node-id>,<node-id>`
                Run the search on only the specified nodes IDs. If suitable shards exist on more than one
                selected nodes, use shards on those nodes using the default method. If none of the specified
                nodes are available, select shards from any available node using the default method.
                - `_prefer_nodes:<node-id>,<node-id>`
                If possible, run the search on the specified nodes IDs. If not, select shards using the default method.
                - `_shards:<shard>,<shard>`
                Run the search only on the specified shards. This value can be combined with other preference
                values, but this value must come first. For example: `_shards:2,3|_local`
                - `<custom-string>`
                Any string that does not start with _. If the cluster state and selected shards do not change,
                searches using the same `<custom-string>` value are routed to the same shards in the same order.
    q:
        type: str
        doc: |
            Query in the Lucene query string syntax.

            You can use the `q` parameter to run a query parameter search. Query parameter searches
            do not support the full Elasticsearch
            [Query DSL](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html)
            but are handy for testing.

            Important: The `q` parameter overrides the query parameter in the request body.
            If both parameters are specified, documents matching the query request body parameter
            are not returned.
    request_cache:
        type: bool
        doc: |
            If `true`, the caching of search results is enabled for requests where `size` is `0`.
            See [Shard request cache settings](https://www.elastic.co/guide/en/elasticsearch/reference/current/shard-request-cache.html).
            Defaults to index level settings.
    rest_total_hits_as_int:
        type: bool
        default: False
        doc: |
            Indicates whether `hits.total` should be rendered as an integer or an object in the
            rest search response. Defaults to `false`.
    routing:
        type: str
        doc: |
            Target the specified primary shard.
    scroll:
        type: str
        doc: |
            Period to retain the
            [search context](https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html#scroll-search-context)
            for scrolling.
            Format is [Time units](https://www.elastic.co/guide/en/elasticsearch/reference/current/common-options.html#time-units).
            See [Scroll search results](https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html#scroll-search-results).

            By default, this value cannot exceed `1d` (24 hours). You can change this limit using the
            `search.max_keep_alive` cluster-level setting.
    search_type:
        type: str
        default: query_then_fetch
        doc: |
            How [distributed term frequencies](https://en.wikipedia.org/wiki/Tf%E2%80%93idf)
            are calculated for
            [relevance scoring](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html#relevance-scores).

            Valid values:

                - `query_then_fetch`
                (Default) Distributed term frequencies are calculated locally for each shard running
                the search. We recommend this option for faster searches with potentially less accurate scoring.
                - `dfs_query_then_fetch`
                Distributed term frequencies are calculated globally, using information gathered
                from all shards running the search. While this option increases the accuracy of scoring,
                it adds a round-trip to each shard, which can result in slower searches.
    seq_no_primary_term:
        type: bool
        default: False
        doc: |
            If `true`, returns sequence number and primary term of the last modification of each hit.
            See [Optimistic concurrency control](https://www.elastic.co/guide/en/elasticsearch/reference/current/optimistic-concurrency-control.html).
    size:
        type: int
        default: 10
        doc: |
            Defines the number of hits to return. Defaults to `10`.

            By default, you cannot page through more than `10,000` hits using the from and size parameters.
            To page through more hits, use the
            [search_after](https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html#search-after)
            parameter.
    sort:
        type: str
        doc: |
            A comma-separated list of `<field>:<direction>` pairs.
    _source:
        type: Union[bool, str]
        default: True
        doc: |
            Indicates which [source fields](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html)
            are returned for matching documents. These fields are returned in the `hits._source` property
            of the search response. Defaults to `true`.

            Valid values:

                - `true`
                (Boolean) The entire document source is returned.
                - `false`
                (Boolean) The document source is not returned.
                - `string` Comma-separated list of source fields to return. Wildcard (*) patterns are supported.
    _source_excludes:
        type: str
        doc: |
            A comma-separated list of
            [source fields](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html)
            to exclude from the response.

            You can also use this parameter to exclude fields from the subset
            specified in `_source_includes` query parameter.

            If the `_source` parameter is `false`, this parameter is ignored.
    _source_includes:
        type: str
        doc: |
            A comma-separated list of
            [source fields](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html)
            to include in the response.

            If this parameter is specified, only these source fields are returned.
            You can exclude fields from this subset using the `_source_excludes` query parameter.

            If the `_source` parameter is `false`, this parameter is ignored.
    stats:
        type: str
        doc: |
            Specific `tag` of the request for logging and statistical purposes.
    stored_fields:
        type: str
        doc: |
            A comma-separated list of stored fields to return as part of a hit.
            If no fields are specified, no stored fields are included in the response.

            If this field is specified, the `_source` parameter defaults to `false`.
            You can pass `_source: true` to return both source fields and stored fields in the search response.
    suggest_field:
        type: str
        doc: |
            Specifies which field to use for suggestions.
    suggest_text:
        type: str
        doc: |
            The source text for which the suggestions should be returned.
    terminate_after:
        type: int
        default: 0
        doc: |
            The maximum number of documents to collect for each shard,
            upon reaching which the query execution will terminate early.

            Defaults to `0`, which does not terminate query execution early.
    timeout:
        type: str
        doc: |
            Specifies the period of time to wait for a response in
            [time units](https://www.elastic.co/guide/en/elasticsearch/reference/current/common-options.html#time-units).
            If no response is received before the timeout expires,
            the request fails and returns an error. Defaults to no timeout.
    track_scores:
        type: bool
        default: False
        doc: |
            If `true`, calculate and return document scores, even if the scores are not used for sorting.
            Defaults to `false`.
    track_total_hits:
        type: Union[int, bool]
        default: 10000
        doc: |
            Number of hits matching the query to count accurately. Defaults to `10000`.

            If `true`, the exact number of hits is returned at the cost of some performance.

            If `false`, the response does not include the total number of hits matching the query.
    typed_keys:
        type: bool
        default: True
        doc: |
            If `true`, aggregation and suggester names are being prefixed by their respective
            types in the response. Defaults to `true`.
    version:
        type: bool
        default: False
        doc: |
            If `true`, returns document version as part of a hit. Defaults to `false`.

